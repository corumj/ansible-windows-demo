---
- name: Provision Business
  hosts: localhost 
  connection: local 
  gather_facts: false
  vars: 
    group_name: ad_server
    short_desc: ActiveDirectory
    server_env: test 
    server_os: windows
    business_domain_name: "{{ survey_business_domain_name }}"
    win_initial_password: "{{ survey_win_initial_password }}"
  tasks:
    - name: Setup AWS infrastructure 
      include_role:
        name: aws-setup
    
    - name: Setup AWS EC2 Instance for AD Domain Services
      include_role:
        name: aws-provision-windows

    - name: Refresh Inventory 
      meta: refresh_inventory

    - name: pull domain server instance info for setting up ADDS
      community.aws.ec2_instance_info:
        region: "{{ region }}"
        aws_access_key: "{{ lookup('env', 'AWS_ACCESS_KEY_ID') }}"
        aws_secret_key: "{{ lookup('env', 'AWS_SECRET_ACCESS_KEY') }}"
        filters:
          "tag:group_name": ad_server
          instance-state-name: ["running"]
      register: ad

    - name: Create business domain group in Tower
      awx.awx.tower_group: 
        name: "{{ business_domain_name }}" 
        inventory: AWS  
        hosts:
          - "{{ ad.instances[0].public_ip_address }}"  
        variables:
          business_domain_name: "{{ survey_business_domain_name }}"   
          win_initial_password: "{{ survey_win_initial_password }}"
        state: present 
        tower_username: "{{ lookup('env', 'TOWER_USERNAME') }}"
        tower_password: "{{ lookup('env', 'TOWER_PASSWORD') }}"
        tower_host: https://localhost
        tower_verify_ssl: false

    - name: Create AWS Machine Credential 
      awx.awx.tower_credential:
        state: present 
        name: AWS Windows Machine 
        description: AWS Windows Machine Credential 
        organization: Default 
        credential_type: Machine 
        inputs:
          username: Administrator
          password: "{{ win_initial_password }}"
          become_method: runas 
          become_username: Administrator 
          become_password: "{{ win_initial_password }}"
        tower_username: "{{ lookup('env', 'TOWER_USERNAME') }}"
        tower_password: "{{ lookup('env', 'TOWER_PASSWORD') }}"
        tower_host: https://localhost
        tower_verify_ssl: false

    - name: Setup Demo Templates 
      import_role:
        name: demo-setup 
    
    - name: Start setup for AD Controller 
      awx.awx.tower_job_launch:
        job_template: "2. Setup AD Controller (will auto run after creating business)"
        tower_username: "{{ lookup('env', 'TOWER_USERNAME') }}"
        tower_password: "{{ lookup('env', 'TOWER_PASSWORD') }}"
        tower_host: https://localhost
        tower_verify_ssl: false
      register: job 

    - name: Wait for AD Controller setup to complete 
      awx.awx.tower_job_wait:
        job_id: "{{ job.id }}"
        timeout: 1200
        tower_username: "{{ lookup('env', 'TOWER_USERNAME') }}"
        tower_password: "{{ lookup('env', 'TOWER_PASSWORD') }}"
        tower_host: https://localhost
        tower_verify_ssl: false
        
    - name: Setup Ansible Tower LDAP 
      include_role:
        name: tower-ldap 
      vars:
        domain_name: "{{ business_domain_name }}.lab"  
      

    # - name: Setup Active Directory Domain Services 
    #   import_role:
    #     name: windows-ad-controller
    #   delegate_to: "{{ ad.instances[0].public_ip_address }}"