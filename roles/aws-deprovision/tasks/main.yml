- name: Retrieve required AWS infrastructure ID's 
  block:
    - name: retrieve vpc ID                 
      amazon.aws.ec2_vpc_net_info:
        region: "{{ region }}"
        aws_access_key: "{{ lookup('env', 'AWS_ACCESS_KEY_ID') }}"
        aws_secret_key: "{{ lookup('env', 'AWS_SECRET_ACCESS_KEY') }}"
        filters:
          "tag:Name": "{{ id }}-vpc"
      register: vpc_info 

    - name: retrieve vpc subnet info 
      amazon.aws.ec2_vpc_subnet_info:
        region: "{{ region }}"
        aws_access_key: "{{ lookup('env', 'AWS_ACCESS_KEY_ID') }}"
        aws_secret_key: "{{ lookup('env', 'AWS_SECRET_ACCESS_KEY') }}"
        filters:
          "tag:Name": "{{ id }}-subnet"
      register: vpc_subnet_info

    - name: retrieve vpc route table id 
      community.aws.ec2_vpc_route_table_info:
        region: "{{ region }}"
        filters:
          "tag:Name": "{{ id }}-vpc-rtbl"
      register: vpc_route_info

    - name: Retrieve Security Group info 
      amazon.aws.ec2_group_info:
        region: "{{ region }}"
        aws_access_key: "{{ lookup('env', 'AWS_ACCESS_KEY_ID') }}"
        aws_secret_key: "{{ lookup('env', 'AWS_SECRET_ACCESS_KEY') }}"
        filters:
          "tag:Name": "{{ id }}-sec-group"
      register: sec_info
  tags: 
    - never 
    - all 

- name: Remove all EC2 Instances
  block:
    - name: Remove EC2 Instances
      community.aws.ec2_instance:
        state: absent
        region: "{{ region }}"
        aws_access_key: "{{ lookup('env', 'AWS_ACCESS_KEY_ID') }}"
        aws_secret_key: "{{ lookup('env', 'AWS_SECRET_ACCESS_KEY') }}"
        filters:
          "tag:app": "{{ app }}"
  tags:
    - never 
    - all_ec2 
    - all

- name: Remove single EC2 Instances
  block:
    - name: Remove single Instances
      community.aws.ec2_instance:
        state: absent
        region: "{{ region }}"
        aws_access_key: "{{ lookup('env', 'AWS_ACCESS_KEY_ID') }}"
        aws_secret_key: "{{ lookup('env', 'AWS_SECRET_ACCESS_KEY') }}"
        filters:
          "tag:Name": "ansible-{{ ec2_instance_name }}-{{ name }}"
  tags:
    - never 
    - single    

- name: Remove AWS Infrastructure 
  block:
    - name: Delete the subnet on the VPC  
      amazon.aws.ec2_vpc_subnet:
        vpc_id: "{{ vpc_info.vpcs[0].vpc_id }}"
        cidr: 10.0.0.0/16
        region: "{{ region }}"
        aws_access_key: "{{ lookup('env', 'AWS_ACCESS_KEY_ID') }}"
        aws_secret_key: "{{ lookup('env', 'AWS_SECRET_ACCESS_KEY') }}"
        state: absent 
      when: vpc_info.vpcs

    - name: Remove subnet route table 
      community.aws.ec2_vpc_route_table:
        vpc_id: "{{ vpc_info.vpcs[0].vpc_id }}"
        region: "{{ region }}"
        lookup: id
        route_table_id: "{{ vpc_route_info.route_tables[0].id }}"
        aws_access_key: "{{ lookup('env', 'AWS_ACCESS_KEY_ID') }}"
        aws_secret_key: "{{ lookup('env', 'AWS_SECRET_ACCESS_KEY') }}"
        state: absent 
        
    - name: remove Internet Gateway for VPC  
      community.aws.ec2_vpc_igw:
        vpc_id: "{{ vpc_info.vpcs[0].vpc_id }}"
        region: "{{ region }}"
        state: absent

    - name: Remove security group 
      amazon.aws.ec2_group: 
        group_id: "{{ sec_info.security_groups[0].group_id }}"
        region: "{{ region }}"
        aws_access_key: "{{ lookup('env', 'AWS_ACCESS_KEY_ID') }}"
        aws_secret_key: "{{ lookup('env', 'AWS_SECRET_ACCESS_KEY') }}"
        state: absent

    - name: Remove the VPC 
      amazon.aws.ec2_vpc_net:
        name: "{{ id }}-vpc"
        cidr_block: 10.0.0.0/16
        region: "{{ region }}"
        tenancy: default
        aws_access_key: "{{ lookup('env', 'AWS_ACCESS_KEY_ID') }}"
        aws_secret_key: "{{ lookup('env', 'AWS_SECRET_ACCESS_KEY') }}"
        state: absent
  tags:
    - never 
    - all 