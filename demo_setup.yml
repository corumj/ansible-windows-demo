--- 
- name: Setup Demo Environment
  hosts: localhost
  connection: local
  vars:
    function: ad_server
    ec2_instances: 
      instances: []
  tasks:
    - name: import login credentials for Tower
      include_vars: "{{lookup('first_found', login_info)}}"
      vars:
        login_info:
          - 'private.yml'
          - 'login_info.yml'

    - name: Create Ansible Windows Ops demo Tower Project
      awx.awx.tower_project:
        name: Windows Ops
        state: present
        organization: Default 
        tower_username: "{{ tower_username }}"
        tower_password: "{{ tower_password }}"
        tower_host: https://localhost
        tower_verify_ssl: false
        scm_type: git 
        scm_url: https://github.com/corumj/ansible-windows-demo.git
        scm_update_on_launch: yes 

    - name: Create AWS Credential 
      awx.awx.tower_credential:
        state: present
        name: AWS Console
        description: AWS Credential from saml 
        organization: Default 
        credential_type: Amazon Web Services
        inputs:
          username: "{{ AWS_ACCESS_KEY_ID }}"
          password: "{{ AWS_SECRET_ACCESS_KEY }}"
          security_token: "{{ AWS_SECURITY_TOKEN }}"
        tower_username: "{{ tower_username }}"
        tower_password: "{{ tower_password }}"
        tower_host: https://localhost
        tower_verify_ssl: false

    - name: Create AWS Machine Credential 
      awx.awx.tower_credential:
        state: present 
        name: AWS Windows Machine 
        description: AWS Windows Machine Credential 
        organization: Default 
        credential_type: Machine 
        inputs:
          username: Administrator
          password: "{{ win_initial_password }}"
          become_method: runas 
          become_username: Administrator 
          become_password: "{{ win_initial_password }}"
        tower_username: "{{ tower_username }}"
        tower_password: "{{ tower_password }}"
        tower_host: https://localhost
        tower_verify_ssl: false

    - name: Create AWS Inventory 
      awx.awx.tower_inventory: 
        name: AWS
        description: AWS Inventory 
        organization: Default 
        state: present 
        tower_username: "{{ tower_username }}"
        tower_password: "{{ tower_password }}"
        tower_host: https://localhost
        tower_verify_ssl: false

    - name: Create AWS Inventory Source
      awx.awx.tower_inventory_source:
        state: present  
        name: AWS 
        description: AWS inventory source 
        inventory: AWS  
        credential: AWS Console  
        # instance_filters: "tag:app={{ app }}"
        overwrite: True  
        update_on_launch: True  
        source: ec2  
        tower_username: "{{ tower_username }}"
        tower_password: "{{ tower_password }}"
        tower_host: https://localhost
        tower_verify_ssl: false

    - name: Create the Windows group 
      awx.awx.tower_group: 
        name: windows 
        inventory: AWS  
        variables:
          ansible_port: 5986
          ansible_connection: winrm
          ansible_winrm_server_cert_validation: ignore
        state: present 
        tower_username: "{{ tower_username }}"
        tower_password: "{{ tower_password }}"
        tower_host: https://localhost
        tower_verify_ssl: false
        
    - name: Create Amazon Infrastructure Setup
      awx.awx.tower_job_template:
        name: "Amazon Infrastructure Setup"
        job_type: "run"
        inventory: "AWS"
        project: "Windows Ops"
        playbook: "aws-infrastructure-setup.yml"
        credentials: 
          - "AWS Console"
        state: "present"
        tower_username: "{{ tower_username }}"
        tower_password: "{{ tower_password }}"
        tower_host: https://localhost
        tower_verify_ssl: false

    - name: Create AD Controller Provision template
      awx.awx.tower_job_template:
        name: "AD Controller Provision"
        job_type: "run"
        inventory: "AWS"
        project: "Windows Ops"
        playbook: "ad-controller-provision.yml"
        credentials: 
          - "AWS Console"
          - "Tower Credential"
          - "AWS Windows Machine"
        state: "present"
        tower_username: "{{ tower_username }}"
        tower_password: "{{ tower_password }}"
        tower_host: https://localhost
        tower_verify_ssl: false

    - name: Create AD Controller Setup template
      awx.awx.tower_job_template:
        name: "AD Controller Setup"
        job_type: "run"
        inventory: "AWS"
        project: "Windows Ops"
        playbook: "ad-controller-setup.yml"
        limit: "{{ function }}"
        credentials: 
          - "AWS Console"
          - "Tower Credential"
          - "AWS Windows Machine"
        state: "present"
        tower_username: "{{ tower_username }}"
        tower_password: "{{ tower_password }}"
        tower_host: https://localhost
        tower_verify_ssl: false

    - name: Create Workflow Template to provision and setup AD Controller 
      block:
      - name: Create Domain Services Setup workflow template
        awx.awx.tower_workflow_job_template:
          name: Domain Services Setup 
          state: present
          description: Chain together workflow for provisioning and setting up the Domain Controller
          organization: Default 
          tower_username: "{{ tower_username }}"
          tower_password: "{{ tower_password }}"
          tower_host: https://localhost
          tower_verify_ssl: false

      - name: Add AD Controller Setup to workflow
        awx.awx.tower_workflow_job_template_node:
          identifier: ad-controller-setup
          workflow: Domain Services Setup  
          unified_job_template: AD Controller Setup 
          organization: Default 
          tower_username: "{{ tower_username }}"
          tower_password: "{{ tower_password }}"
          tower_host: https://localhost
          tower_verify_ssl: false

      - name: Add AD Controller provision to workflow
        awx.awx.tower_workflow_job_template_node:
          identifier: ad-controller-provision
          workflow: Domain Services Setup  
          unified_job_template: AD Controller Provision
          success_nodes:
            - ad-controller-setup
          organization: Default 
          tower_username: "{{ tower_username }}"
          tower_password: "{{ tower_password }}"
          tower_host: https://localhost
          tower_verify_ssl: false

    - name: Create deprovision ec2 instances template
      awx.awx.tower_job_template:
        name: "Deprovision All EC2 Instances for Demo"
        job_type: "run"
        inventory: "AWS"
        project: "Windows Ops"
        playbook: "deprovision.yml"
        job_tags: "all_ec2"
        credentials: 
          - "AWS Console"
        state: "present"
        tower_username: "{{ tower_username }}"
        tower_password: "{{ tower_password }}"
        tower_host: https://localhost
        tower_verify_ssl: false

    - name: Create deprovision all AWS Resources template
      awx.awx.tower_job_template:
        name: "Deprovision All AWS Resources for Demo"
        job_type: "run"
        inventory: "AWS"
        project: "Windows Ops"
        playbook: "deprovision.yml"
        job_tags: "all"
        credentials: 
          - "AWS Console"
        state: "present"
        tower_username: "{{ tower_username }}"
        tower_password: "{{ tower_password }}"
        tower_host: https://localhost
        tower_verify_ssl: false

    # - name: create deprovision survey from template 
    #   template:
    #     src: deprovision.json.j2
    #     dest: files/deprovision.json

    # - name: Create deprovision single EC2 Instance
    #   awx.awx.tower_job_template:
    #     name: "Deprovision Specific EC2 Instance"
    #     job_type: "run"
    #     inventory: "AWS"
    #     project: "Windows Ops"
    #     playbook: "deprovision.yml"
    #     job_tags: "single"
    #     credentials: 
    #       - "AWS Console"
    #       - "Tower Credential"
    #     survey_enabled: yes 
    #     survey_spec: "{{ lookup('file', 'files/deprovision.json') }}"
    #     state: "present"
    #     tower_username: "{{ tower_username }}"
    #     tower_password: "{{ tower_password }}"
    #     tower_host: https://localhost
    #     tower_verify_ssl: false

    - name: Create Provision New Server template
      awx.awx.tower_job_template:
        name: "Provision New Server"
        job_type: "run"
        inventory: "AWS"
        project: "Windows Ops"
        playbook: "provision.yml"
        credentials: 
          - "AWS Console"
          - "Tower Credential"
        survey_enabled: yes 
        survey_spec: "{{ lookup('file', 'files/provision-survey.json') }}"
        state: "present"
        tower_username: "{{ tower_username }}"
        tower_password: "{{ tower_password }}"
        tower_host: https://localhost
        tower_verify_ssl: false

    # - name: Create Join server to domain template
    #   awx.awx.tower_job_template:
    #     name: "Join Domain"
    #     job_type: "run"
    #     inventory: "AWS"
    #     project: "Windows Ops"
    #     playbook: "join-domain.yml"
    #     credentials: 
    #       - "AWS Console"
    #       - "AWS Windows Machine"
    #       - "Tower Credential"
    #     state: "present"
    #     tower_username: "{{ tower_username }}"
    #     tower_password: "{{ tower_password }}"
    #     tower_host: https://localhost
    #     tower_verify_ssl: false

    - name: Create deprovision survey list update template 
      awx.awx.tower_job_template:
        name: "Update host list for surveys"
        job_type: "run"
        inventory: "AWS"
        project: "Windows Ops"
        playbook: "update-deprovision-list.yml"
        credentials: 
          - "AWS Console"
          - "Tower Credential"
        state: "present"
        tower_username: "{{ tower_username }}"
        tower_password: "{{ tower_password }}"
        tower_host: https://localhost
        tower_verify_ssl: false

    # - name: Schedule update of survey host list 
    #   awx.awx.tower_schedule:
    #     name: "Update deprovision survey list"
    #     state: present 
    #     unified_job_template: "Update deprovision survey list"
    #     rrule: "DTSTART:20191219T130551Z RRULE:FREQ=MINUTELY;INTERVAL=5"
    #     tower_username: "{{ tower_username }}"
    #     tower_password: "{{ tower_password }}"
    #     tower_host: https://localhost
    #     tower_verify_ssl: false

#     - name: Create Windows Update job template
#       awx.awx.tower_job_template:
#         name: "Windows Updates"
#         job_type: run
#         inventory: AWS
#         project: "Windows Ops"
#         playbook: windows-updates.yml
#         credentials:
#           - "AWS Windows Machine"
#         limit: "tag_app_{{ app }}"
#         state: present
#         survey_enabled: yes
#         survey_spec: "{{ lookup('file', 'windows_update_survey.json') }}"
#         tower_username: "{{ tower_username }}"
#         tower_password: "{{ tower_password }}"
#         tower_host: https://localhost
#         tower_verify_ssl: false

#     - name: Create Domain Controller job template
#       awx.awx.tower_job_template:
#         name: "Create Domain Controller"
#         job_type: run 
#         inventory: AWS   
#         project: Windows Ops  
#         playbook: windows-ad-controller.yml  
#         credentials:
#           - "AWS Windows Machine"
#         limit: tag_function_ad_server
#         state: present 
#         tower_username: "{{ tower_username }}"
#         tower_password: "{{ tower_password }}"
#         tower_host: https://localhost
#         tower_verify_ssl: false        