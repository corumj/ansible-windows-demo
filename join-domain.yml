- name: Retrieve AWS connection info for instance
  hosts: localhost 
  connection: local
  tasks:
    # since we only have the instance name we need to lookup the ip address
    # since that's what is used in Tower for the name (probably can change that)
    - name: Retrieve Instance Info
      community.aws.ec2_instance_info:
        region: "{{ region }}"
        aws_access_key: "{{ lookup('env', 'AWS_ACCESS_KEY_ID') }}"
        aws_secret_key: "{{ lookup('env', 'AWS_SECRET_ACCESS_KEY') }}"
        filters:
          "tag:Name": "{{ instance_name }}"
          instance-state-name: ["running"]
      register: ec2_instance 

    - name: Add host to temporary group 
      awx.awx.tower_group:
        name: temp_domain
        inventory: "AWS"
        hosts:
          - "{{ ec2_instance.instances[0].public_ip_address }}"
        state: present 
        tower_username: "{{ lookup('env', 'TOWER_USERNAME') }}"
        tower_password: "{{ lookup('env', 'TOWER_PASSWORD') }}"
        tower_host: https://localhost
        tower_verify_ssl: false

    # new group won't be available in Tower until we refresh the inventory
    - name: Update AWS Inventory 
      awx.awx.tower_inventory_source_update:
        name: AWS  
        inventory: AWS
        wait: True
        tower_username: "{{ lookup('env', 'TOWER_USERNAME') }}"
        tower_password: "{{ lookup('env', 'TOWER_PASSWORD') }}"
        tower_host: https://localhost
        tower_verify_ssl: false

- name: Join instance to domain 
  hosts: temp_domain
  roles:
    - join-domain

  post_tasks:
    # clean up after ourselves
    - name: Remove Temp Group 
      awx.awx.tower_group:
        name: temp_domain
        inventory: "AWS"
        state: absent 
        tower_username: "{{ lookup('env', 'TOWER_USERNAME') }}"
        tower_password: "{{ lookup('env', 'TOWER_PASSWORD') }}"
        tower_host: https://localhost
        tower_verify_ssl: false
      delegate_to: localhost
      
    